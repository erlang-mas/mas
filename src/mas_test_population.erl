%%%-----------------------------------------------------------------------------
%%% @doc Population behaviour for testing purposes.
%%% @end
%%%-----------------------------------------------------------------------------

-module(mas_test_population).

-behaviour(mas_population).

%%% API
-export([]).

%%% Population callbacks
-export([init_agent/1,
         init/2,
         step/2,
         measure/2,
         stop_condition/2,
         terminate/2]).

-record(state, {start_time  :: integer()}).

%%%=============================================================================
%%% Population callbacks
%%%=============================================================================

%%------------------------------------------------------------------------------
%% @private
%%------------------------------------------------------------------------------
init_agent(_SP) ->
    rand:uniform().

%%------------------------------------------------------------------------------
%% @private
%%------------------------------------------------------------------------------
init(Agents, _SP) ->
    {Agents, #state{start_time = mas_utils:timestamp()}}.

%%------------------------------------------------------------------------------
%% @private
%%------------------------------------------------------------------------------
step(Agents, State) ->
    {Agents, [], State}.

%%------------------------------------------------------------------------------
%% @private
%%------------------------------------------------------------------------------
measure(_Agents, State) ->
    {[], State}.

%%------------------------------------------------------------------------------
%% @private
%%------------------------------------------------------------------------------
stop_condition(_Agents, #state{start_time = StartTime}) ->
    mas_utils:timestamp() - StartTime > 2000.

%%------------------------------------------------------------------------------
%% @private
%%------------------------------------------------------------------------------
terminate(_Agents, _State) ->
    ok.
